
name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ghcr.io/furkan-cyber/ntt-sustainability-rag:latest

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        python -m nltk.downloader punkt stopwords
    
    - name: Run tests with coverage
      run: |
        pytest -v -s --cov=. --cov-report=xml main.py
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver: docker-container
    
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ env.DOCKER_IMAGE }}
        labels: |
          org.opencontainers.image.source=${{ github.repository_url }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v3
    
    - name: Run FastAPI service
      run: |
        docker run -d -p 8000:8000 -e SERVICE_OPTION=api ${{ env.DOCKER_IMAGE }}
    
    - name: Run Gradio interface
      run: |
        docker run -d -p 7860:7860 -e SERVICE_OPTION=gradio ${{ env.DOCKER_IMAGE }}
    
    #- name: Verify services
     # run: |
       # sleep 10  # Wait for services to start
       # curl -f http://localhost:8000/api/health || exit 1
       # curl -f http://localhost:7860 || exit 1
